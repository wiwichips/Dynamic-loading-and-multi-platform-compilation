##
##	Makefile for module formatter project
##


##
##	Variables
##	---------
##

EXE	= modFormatter

# List of all of the object files in your project
OBJS = \
	mainline.o \
	module_processing.o \
	string_tools.o

# Flags for compiling
CFLAGS = -g

# Libs that need to be linked
LDLIBS =


##
##	Build Targets
##	-------------
##

# Default target - build the program
$(EXE) : $(OBJS)
	echo "\033[0;34m ~ in src/Makefile.Common ~~~~~~~~~~~~ \033[0m"
	$(CC) $(CFLAGS) -o $(EXE) $(OBJS) $(LDLIBS)


##
##	Cleanup Targets
##	---------------
##

# Remove all the files we create in the top level directory.
# Lines beginning with a '-' will not cause make(1) to stop if they
# result in a non-zero exit status (so a missing item to clean
# up will simply be ignored)
clean : 
	- rm -f $(EXE)
	- rm -f $(OBJS)
	- rm -f tags


##
##	Convenience/Support Targets
##	---------------------------
##

# ctags makes a database of source code tags for use with vim and co
tags ctags : dummy
	- ctags *.c

# a rule like this dummy rule can be use to make another rule always
# run - ctags depends on this, so therefore ctags will always be
# executed by "make ctags" as make is fooled into thinking that it
# has performed a dependency each time, and therefore re-does the work
dummy :
	echo "\033[0;34m ~ in src/Makefile.Common ~~~~~~~~~~~~ \033[0m"

